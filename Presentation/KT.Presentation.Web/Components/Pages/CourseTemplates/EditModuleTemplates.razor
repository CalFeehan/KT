@page "/course-templates/{id:guid}/modules/edit"

@inject ICourseTemplateService CourseTemplateService
@inject NavigationManager NavigationManager

<h1>Add Modules to Course Template</h1>

<EditForm Model="@moduleTemplates" OnValidSubmit="AddModules" FormName="AddModules" >

    @foreach (var moduleTemplate in moduleTemplates)
    {
        <div>
            <input type="checkbox" checked />
            <label>@moduleTemplate.Title</label>
        </div>
    }
    
    <div class="d-flex justify-content-between">
        <button type="submit" class="btn btn-primary" style="margin-top: 10px;">Save</button>
        <button type="button" class="btn btn-secondary" style="margin-top: 10px;" @onclick="NavigateBack">Back</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private List<ModuleTemplateResponse> moduleTemplates = new List<ModuleTemplateResponse>();

    protected override async Task OnInitializedAsync()
    {
        var courseTemplate = await CourseTemplateService.GetByIdAsync(Id);
        moduleTemplates = courseTemplate.ModuleTemplates.ToList();
    }

    private async Task AddModules()
    {
        await Task.Delay(1000);
        return;
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo($"/course-templates/edit/{Id}");
    }
}

