@page "/learners"
@rendermode InteractiveServer

@inject ILearnerService LearnerService
@inject NavigationManager NavigationManager

<PageTitle>Learners</PageTitle>
<div class="container d-flex justify-content-between">
    <h3>Learners</h3>
    <button class="btn btn-primary" style="margin: 10px;" @onclick="AddLearner">Add a Learner</button>
</div>

@if (_learners.Count == 0)
{
    <p>No learners found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Forename</th>
            <th>Surname</th>
            <th>Date of Birth</th>
            <th>Address Line 1</th>
            <th>Address Line 2</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Contact Preference</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var learner in _learners)
        {
            <tr>
                <td>@learner.Forename</td>
                <td>@learner.Surname</td>
                <td>@learner.DateOfBirth.ToString("d")</td>
                <td>@learner.Address.Line1</td>
                <td>@learner.Address.Line2</td>
                <td>@learner.ContactDetails.Email</td>
                <td>@learner.ContactDetails.Phone</td>
                <td>@learner.ContactDetails.ContactPreference</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    List<LearnerResponse> _learners = [];

    protected override async Task OnInitializedAsync()
    {
        _learners = await LearnerService.LearnersAllAsync();
    }

    private void AddLearner()
    {
        NavigationManager.NavigateTo("learners/add");
    }


}